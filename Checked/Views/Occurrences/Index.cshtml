@using Checked.Models.Models
@using Checked.Servicos
@using Microsoft.AspNetCore.Identity
@using Checked.Servicos.ControllerServices
@model PaginatedList<Checked.Models.Models.Occurrence>
@inject UserManager<ApplicationUser> UserManager
@inject OccurrenceService ComplementService

@{
    ViewData["Title"] = "Index";
    var itens = ViewData["actions"];
    var user = await UserManager.GetUserAsync(User);

    var columns = await ComplementService.GetColumnsAsync(user.OrganizationId);
    var titles = columns.DistinctBy(c => c.ColumnTitle);
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<header>
    <link rel="stylesheet" href="~/css/Occurrence.css" />    
    <script type="module" src="~/js/occurrences.js" async></script>
    <script type="module" src="~/js/modules/network.js"></script>
</header>
<div class="cntr">
    <div class="cntr-navegation">
        <a class="btn btn-primary" role="button" asp-action="Create">Criar nova Ocorrência</a>
        <div id="colunas-ocultas">
        </div>
    </div>
    <div class="scrollbar-occurrence" id="style-2">
        <table style="font-size:13px;font-weight: 600;" class="table table-hover table-sm align-middle">
            <colgroup>
                <col class="col0">
                <col class="col1">
                <col class="col2">
                <col class="col3">
                <col class="col4">
                <col class="col5">
                <col class="col6">
                <col class="col7">
                <col class="col8">
                <col class="col9">
                <col class="col10">
                <col class="col11">
                <col class="col12">
                <col class="col13">
                <col class="col14">
                <col class="col15">
            </colgroup>
            <thead class="table-dark sticky-top">
                <tr>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='0' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Tp_Ocorrencia.Name)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='1' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().CreatedAt)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='2' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().DateOccurrence)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='3' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Description)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='4' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Additional1)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='5' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Additional2)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='6' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Harmed)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='7' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Document)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='8' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Cost)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='9' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Appraiser)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='10' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Origin)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        Plano de Ação
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='12' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().StatusActions)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='13' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().Status)
                    </th>
                    <th data-isToolTip='false' class="tableCell">
                        <i data-position='14' class='bx bx-minus-circle arrow'></i>
                        @Html.DisplayNameFor(model => model.First().CorrectiveAction)
                    </th>

                    @if (!string.IsNullOrEmpty(user.OrganizationId))
                    {

                        foreach (var title in titles)
                        {
                            <th data-isToolTip='false' class="tableCell">@title.ColumnTitle</th>
                        }

                    }
                    <th data-isToolTip='false' class="tableCell">
                        <i style="font-size:1rem" class='bx bx-plus-circle addComplement'></i>
                    </th>
                    <th data-isToolTip='false' class="tableCell"></th>
                </tr>
            </thead>
            <tbody id=body-table-occurrence>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Tp_Ocorrencia.Name)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.CreatedAt)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.DateOccurrence)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Additional1)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Additional1)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Harmed)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Document)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Cost)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Appraiser.Name)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Origin)
                        </td>
                        <td class="tableCell">
                            <a asp-action="Index" asp-controller="Plans" asp-route-id="@item.Id">Plano de ação</a>
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.StatusActions)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.Status.Name)
                        </td>
                        <td class="tableCell">
                            @Html.DisplayFor(modelItem => item.CorrectiveAction)
                        </td>
                        @{
                            var infoComplements = await ComplementService.GetInfoComplementOccurrence(item.Id);

                            foreach (var title in titles)
                            {
                                var result = @infoComplements.Where(c => c.OccurrenceColumnComplementId == title.Id).FirstOrDefault();
                                if (result != null && result.Value != string.Empty)
                                {
                                    <td class="tableCell">@result.Value</td>
                                }
                                else
                                {
                                    <td data-isToolTip='false' class="tableCell">
                                        <i data-occurrenceId="@item.Id" data-coluna=@title.ColumnTitle data-columnId=@title.Id style="font-size:1rem" class='bx bx-plus-circle addComplement addComplement-value'></i>
                                    </td>
                                }
                            }
                        }
                        <td data-isToolTip='false'>
                        </td>
                        <td data-isToolTip='false'>
                            <a asp-action="Edit" asp-route-idOccurrence="@item.Id">Editar  |</a>
                            <a asp-action="Details" asp-route-idOccurrence="@item.Id">Detalhes |</a>
                            <a asp-action="Delete" asp-route-idOccurrence="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="buttons-pagination">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @nextDisabled">
                Next
            </a>
            <i id="filterOccurrence" class='bx bx-filter-alt'></i>
        </div>
    </div>
</div>
<div class="modal-complement display-off" id="column-complement" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="exampleModalLabel">Adicionar nova coluna</h4>
            </div>
            <div class="modal-body">
                <form asp-action="CreateColumn" method="post" id="form-column">
                    <div class="form-group">
                        <label for="title">Nome</label>
                        <input type="text" class="form-control" id="title" name="title" placeholder="Nome">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="close-column-complement" class="btn btn-light close-modal">Fechar</button>
                <input type="submit" form="form-column" class="btn btn-success" value="Enviar" />
            </div>
        </div>
    </div>
</div>
<div class="modal-complement display-off" id="cell-complement" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Nova informação</h4>
            </div>
            <div class="modal-body">
                <form asp-action="AddInfoComplement" method="post" id="form-infoComplement">
                    <div class="form-group">
                        <label id="name-column" for="value">Nome</label>
                        <input type="text" class="form-control" id="value" name="value" placeholder="valor">
                        <input type="hidden" name="occurrenceId" id="occurrenceId" />
                        <input type="hidden" name="columnId" id="columnId" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="close-column-value" class="btn btn-light close-modal-cell">Fechar</button>
                <input type="submit" form="form-infoComplement" class="btn btn-success" value="Enviar" />
            </div>
        </div>
    </div>
</div>



